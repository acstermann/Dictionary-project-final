{"ast":null,"code":"var _jsxFileName = \"/Users/ann-christinstermann/Documents/Weiterbildung/Coding/SheCodes/React/Dictionary-project/src/Results.js\";\nimport React from \"react\";\nimport Meaning from \"./Meaning\";\nimport \"./Results.css\";\nimport Phonetic from \"./Phonetic\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Results(props) {\n  console.log(props.results);\n\n  if (props.results) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Results\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \" Your selected word is:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: props.results.word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), props.result.phoentics.map(function (phonetic, index) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Phonetic, {\n            phoentic: phonetic\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this);\n      }), props.results.meanings.map(function (meaning, index) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Meaning, {\n            meaning: meaning\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this);\n  } else {\n    return null;\n  }\n}\n_c = Results;\n\nvar _c;\n\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"sources":["/Users/ann-christinstermann/Documents/Weiterbildung/Coding/SheCodes/React/Dictionary-project/src/Results.js"],"names":["React","Meaning","Phonetic","Results","props","console","log","results","word","result","phoentics","map","phonetic","index","meanings","meaning"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,eAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;;AACA,MAAIH,KAAK,CAACG,OAAV,EAAmB;AACjB,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAKH,KAAK,CAACG,OAAN,CAAcC;AAAnB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAKGJ,KAAK,CAACK,MAAN,CAAaC,SAAb,CAAuBC,GAAvB,CAA2B,UAAUC,QAAV,EAAoBC,KAApB,EAA2B;AACrD,4BACE;AAAA,iCACE,QAAC,QAAD;AAAU,YAAA,QAAQ,EAAED;AAApB;AAAA;AAAA;AAAA;AAAA;AADF,WAAUC,KAAV;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OANA,CALH,EAYGT,KAAK,CAACG,OAAN,CAAcO,QAAd,CAAuBH,GAAvB,CAA2B,UAAUI,OAAV,EAAmBF,KAAnB,EAA0B;AACpD,4BACE;AAAA,iCACE,QAAC,OAAD;AAAS,YAAA,OAAO,EAAEE;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF,WAAUF,KAAV;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OANA,CAZH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAsBD,GAvBD,MAuBO;AACL,WAAO,IAAP;AACD;AACF;KA5BuBV,O","sourcesContent":["import React from \"react\";\nimport Meaning from \"./Meaning\";\nimport \"./Results.css\";\nimport Phonetic from \"./Phonetic\";\n\nexport default function Results(props) {\n  console.log(props.results);\n  if (props.results) {\n    return (\n      <div className=\"Results\">\n        <div className=\"result\">\n          <h6> Your selected word is:</h6>\n          <h2>{props.results.word}</h2>\n        </div>\n        {props.result.phoentics.map(function (phonetic, index) {\n          return (\n            <div key={index}>\n              <Phonetic phoentic={phonetic} />\n            </div>\n          );\n        })}\n        {props.results.meanings.map(function (meaning, index) {\n          return (\n            <div key={index}>\n              <Meaning meaning={meaning} />\n            </div>\n          );\n        })}\n      </div>\n    );\n  } else {\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}