{"ast":null,"code":"var _jsxFileName = \"/Users/ann-christinstermann/Documents/Weiterbildung/Coding/SheCodes/React/Dictionary-project/src/Dictionary.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Dictionary.css\";\nimport axios from \"axios\";\nimport Results from \"./Results\";\nimport Photos from \"./Photos\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dictionary(props) {\n  _s();\n\n  let [keyword, setKeyword] = useState(props.defaultKeyWord);\n  let [results, setResults] = useState(null);\n  let [loaded, setLoaded] = useState(false);\n  let [photos, setPhotos] = useState(null);\n\n  function handleResponse(response) {\n    setResults(response.data[0]);\n  }\n\n  function handlePexelsResponse(response) {\n    console.log(response);\n    setPhotos(response.data.photos);\n  }\n\n  function search() {\n    let apiUrl = `https://api.dictionaryapi.dev/api/v2/entries/en/${keyword}`;\n    axios.get(apiUrl).then(handleResponse);\n    let pexelsApiKey = \"563492ad6f91700001000001664e3c4459bc4584880585fec954cabf\";\n    let pexelsApiUrl = `https://api.pexels.com/v1/search?query=${keyword}&per_page=1`;\n    axios.get(pexelsApiUrl, {\n      headers: {\n        Authorization: `Bearer ${pexelsApiKey}`\n      }\n    }).then(handlePexelsResponse);\n  } //documentation: https://dictionaryapi.dev\n\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    search();\n  }\n\n  function handleKeywordChange(event) {\n    setKeyword(event.target.value);\n  }\n\n  function load() {\n    setLoaded(true);\n    search();\n  }\n\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Dictionary\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"search\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"question\",\n          children: \"Which word you want to look up?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"Search\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"search\",\n            onChange: handleKeywordChange,\n            defaultValue: props.defaultKeyWord\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Results, {\n        results: results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Photos, {\n        photos: photos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  } else {\n    load();\n    return \"loading\";\n  }\n}\n\n_s(Dictionary, \"rZK9M/Li11SY84tgQn4tY4aF2ik=\");\n\n_c = Dictionary;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dictionary\");","map":{"version":3,"sources":["/Users/ann-christinstermann/Documents/Weiterbildung/Coding/SheCodes/React/Dictionary-project/src/Dictionary.js"],"names":["React","useState","axios","Results","Photos","Dictionary","props","keyword","setKeyword","defaultKeyWord","results","setResults","loaded","setLoaded","photos","setPhotos","handleResponse","response","data","handlePexelsResponse","console","log","search","apiUrl","get","then","pexelsApiKey","pexelsApiUrl","headers","Authorization","handleSubmit","event","preventDefault","handleKeywordChange","target","value","load"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./Dictionary.css\";\nimport axios from \"axios\";\nimport Results from \"./Results\";\nimport Photos from \"./Photos\";\n\nexport default function Dictionary(props) {\n  let [keyword, setKeyword] = useState(props.defaultKeyWord);\n  let [results, setResults] = useState(null);\n  let [loaded, setLoaded] = useState(false);\n  let [photos, setPhotos] = useState(null);\n\n  function handleResponse(response) {\n    setResults(response.data[0]);\n  }\n  function handlePexelsResponse(response) {\n    console.log(response);\n    setPhotos(response.data.photos);\n  }\n  function search() {\n    let apiUrl = `https://api.dictionaryapi.dev/api/v2/entries/en/${keyword}`;\n    axios.get(apiUrl).then(handleResponse);\n    let pexelsApiKey =\n      \"563492ad6f91700001000001664e3c4459bc4584880585fec954cabf\";\n    let pexelsApiUrl = `https://api.pexels.com/v1/search?query=${keyword}&per_page=1`;\n    axios\n      .get(pexelsApiUrl, {\n        headers: { Authorization: `Bearer ${pexelsApiKey}` },\n      })\n      .then(handlePexelsResponse);\n  }\n  //documentation: https://dictionaryapi.dev\n  function handleSubmit(event) {\n    event.preventDefault();\n    search();\n  }\n\n  function handleKeywordChange(event) {\n    setKeyword(event.target.value);\n  }\n  function load() {\n    setLoaded(true);\n    search();\n  }\n  if (loaded) {\n    return (\n      <div className=\"Dictionary\">\n        <section className=\"search\">\n          <p className=\"question\">Which word you want to look up?</p>\n          <form onSubmit={handleSubmit} className=\"Search\">\n            <input\n              type=\"search\"\n              onChange={handleKeywordChange}\n              defaultValue={props.defaultKeyWord}\n            />\n            <input type=\"submit\" />\n          </form>\n        </section>\n        <Results results={results} />\n        <Photos photos={photos} />\n      </div>\n    );\n  } else {\n    load();\n    return \"loading\";\n  }\n}\n"]},"metadata":{},"sourceType":"module"}